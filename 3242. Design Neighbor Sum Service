class neighborSum:

    def __init__(self, grid: List[List[int]]):
        self.grid = grid
        self.n=len(grid)
        

    def adjacentSum(self, value: int) -> int:
        sum=0
        found=False
        for i in range(self.n):
            for j in range(self.n):
                if self.grid[i][j]==value:
                    x,y=i,j
                    found=True
                    break
            if found:
                break
        if x-1>=0:
            sum+=self.grid[x-1][y]
        if y+1<self.n:
            sum+=self.grid[x][y+1]
        if x+1<self.n:
            sum+=self.grid[x+1][y]
        if y-1>=0:
            sum+=self.grid[x][y-1]
        return sum
        

    def diagonalSum(self, value: int) -> int:
        sum=0
        found=False
        for i in range(self.n):
            for j in range(self.n):
                if self.grid[i][j]==value:
                    x,y=i,j
                    found=True
                    break
            if found:
                break
        if x-1>=0 and j-1>=0:
            sum+=self.grid[x-1][y-1]
        if x-1>=0 and j+1<self.n:
            sum+=self.grid[x-1][y+1]
        if x+1<self.n and j-1>=0:
            sum+=self.grid[x+1][y-1]
        if x+1<self.n and j+1<self.n:
            sum+=self.grid[x+1][y+1]
        return sum

            

        
        


# Your neighborSum object will be instantiated and called as such:
# obj = neighborSum(grid)
# param_1 = obj.adjacentSum(value)
# param_2 = obj.diagonalSum(value)
